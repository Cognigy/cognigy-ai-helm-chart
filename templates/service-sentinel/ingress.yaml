# We are using the ingress configuration "serviceApi" from values.yaml
# as both service-api and service-sentinel both share the same host and
# use path based routing.
{{- if and (eq .Values.ingress.enabled true) (eq .Values.serviceSentinel.enabled true) }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: service-sentinel
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    {{- if .Values.tls.enabled }}
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    {{- else }}
    traefik.ingress.kubernetes.io/router.entrypoints: web
    {{- end }}

    {{- if .Values.ingress.serviceApi.ipWhiteListMiddleware.enabled }}
    traefik.ingress.kubernetes.io/router.middlewares: "{{ $.Release.Namespace }}-ipwhitelistserviceapi@kubernetescrd"
    {{- end }}
spec:
  ingressClassName: traefik
  {{- if (.Values.ingress.serviceApi.tls.enabled) }}
  {{- if (.Values.ingress.serviceApi.tls.existingSecret) }}
  tls:
    - secretName: {{ .Values.ingress.serviceApi.tls.existingSecret | quote }}
  {{- else if and (.Values.ingress.serviceApi.tls.crt) (.Values.ingress.serviceApi.tls.key) }}
  tls:
    - secretName: cognigy-service-api-tls
  {{- else }}
    {{ required "A valid value for .Values.ingress.serviceApi.tls is required!" .Values.ingress.serviceApi.tls.crt }}
    {{ required "A valid value for .Values.ingress.serviceApi.tls is required!" .Values.ingress.serviceApi.tls.key }}
    {{ required "A valid value for .Values.ingress.serviceApi.tls is required!" .Values.ingress.serviceApi.tls.existingSecret }}
  {{- end }}
  {{- else -}}
  {{- include "tlsCertificate.secretName.render" $ | nindent 2 }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.serviceApi.host }}
    http:
      paths:
      {{- range $path := .Values.serviceSentinel.ingress.paths }}
      - path: {{ $path }}
        pathType: Prefix
        backend:
          service:
            name: service-sentinel
            port:
              number: 8000
      {{- end }}
{{- end }}