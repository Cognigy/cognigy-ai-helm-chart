{{- if .Values.cognigyAgentAssist.enabled }}
{{- if .Values.ingress.agentAssistBackend.tls.enabled }}
{{- if not (.Values.ingress.agentAssistBackend.tls.existingSecret) }}
{{- if and (.Values.ingress.agentAssistBackend.tls.crt) (.Values.ingress.agentAssistBackend.tls.key) }}
apiVersion: v1
kind: Secret
metadata:
  name: cognigy-agent-assist-backend-tls
  namespace: {{ $.Release.Namespace | quote }}
type: kubernetes.io/tls
data:
  # your base64 encoded tls certificate
  tls.crt: {{ .Values.ingress.agentAssistBackend.tls.crt | b64enc | quote }}
  # your base64 encoded private key
  tls.key: {{ .Values.ingress.agentAssistBackend.tls.key | b64enc | quote }}
{{- else }}
  {{ required "A valid value for .Values.ingress.agentAssistBackend.tls is required!" .Values.ingress.agentAssistBackend.tls.crt }}
  {{ required "A valid value for .Values.ingress.agentAssistBackend.tls is required!" .Values.ingress.agentAssistBackend.tls.key }}
  {{ required "A valid value for .Values.ingress.agentAssistBackend.tls is required!" .Values.ingress.agentAssistBackend.tls.existingSecret }}
{{- end }}
{{- end }}
{{- end }}

---
{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: agent-assist-backend
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    {{- if .Values.tls.enabled }}
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    {{- else }}
    traefik.ingress.kubernetes.io/router.entrypoints: web
    {{- end }}
    {{- if .Values.ingress.agentAssistBackend.ipWhiteListMiddleware.enabled }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ $.Release.Namespace }}-ipwhitelistagentassistbackend@kubernetescrd
    {{- end }}
spec:
  ingressClassName: traefik
  {{- if (.Values.ingress.agentAssistBackend.tls.enabled) }}
  {{- if (.Values.ingress.agentAssistBackend.tls.existingSecret) }}
  tls:
    - secretName: {{ .Values.ingress.agentAssistBackend.tls.existingSecret | quote }}
  {{- else if and (.Values.ingress.agentAssistBackend.tls.crt) (.Values.ingress.agentAssistBackend.tls.key) }}
  tls:
    - secretName: cognigy-agent-assist-backend-tls
  {{- else }}
    {{ required "A valid value for .Values.ingress.agentAssistBackend.tls is required!" .Values.ingress.agentAssistBackend.tls.crt }}
    {{ required "A valid value for .Values.ingress.agentAssistBackend.tls is required!" .Values.ingress.agentAssistBackend.tls.key }}
    {{ required "A valid value for .Values.ingress.agentAssistBackend.tls is required!" .Values.ingress.agentAssistBackend.tls.existingSecret }}
  {{- end }}
  {{- else }}
  {{- include "tlsCertificate.secretName.render" $ | nindent 2 }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.agentAssistBackend.host }}
    http:
      paths:
      - backend:
          service:
            name: agent-assist-backend
            port:
              number: 8000
        path: /
        pathType: Prefix
{{- end }}
{{- end }}