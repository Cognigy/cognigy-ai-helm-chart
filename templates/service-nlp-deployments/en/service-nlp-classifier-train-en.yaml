{{- if .Values.serviceNlpClassifierTrainEn.enabled }}
{{- $statefulRabbitMq_secret := include "common.secretName.render" ( dict "existingSecret" $.Values.statefulRabbitMq.auth.existingSecret "defaultSecret" "cognigy-rabbitmq") }}
{{- $redisHa_secret := include "common.secretName.render" ( dict "existingSecret" $.Values.redisHa.auth.existingSecret "defaultSecret" "cognigy-redis-password") }}
{{- $serviceNlp_dbSecret := include "common.secretName.render" ( dict "existingSecret" $.Values.dbConnectionString.services.serviceNlp.auth.existingSecret "defaultSecret" (printf "cognigy-%s" $.Values.dbConnectionString.services.serviceNlp.serviceName)) }}
{{- with .Values.serviceNlpClassifierTrainEn }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-nlp-classifier-train-en
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app: service-nlp-classifier-train-en
  replicas: {{ .replicaCount }}
  template:
    metadata:
      annotations:
        checksum/embedding-models: {{ include (print $.Template.BasePath "/configurations/embedding-models.yaml") $ | sha256sum }}
        checksum/locales: {{ include (print $.Template.BasePath "/configurations/locales.yaml") $ | sha256sum }}
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
        checksum/rabbitmq: {{ if not (lookup "v1" "Secret" $.Release.Namespace $statefulRabbitMq_secret) }}{{ $statefulRabbitMq_secret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $statefulRabbitMq_secret).data | sha256sum }}{{ end }}
        checksum/redis: {{ if not (lookup "v1" "Secret" $.Release.Namespace $redisHa_secret) }}{{ $redisHa_secret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $redisHa_secret).data | sha256sum }}{{ end }}
        checksum/secret: {{ if not (lookup "v1" "Secret" $.Release.Namespace $serviceNlp_dbSecret) }}{{ $serviceNlp_dbSecret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $serviceNlp_dbSecret).data | sha256sum }}{{ end }}
        {{- if $.Values.cognigyCommonPodAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" $.Values.cognigyCommonPodAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels:
        app: service-nlp-classifier-train-en
    spec:
      {{- if .affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .priorityClassName }}
      priorityClassName: {{ .priorityClassName }}
      {{- end }}
      containers:
        - name: service-nlp-classifier-train-en
          image: {{ include "common.image.render" (dict "global" $.Values.global "image" .image) }}
          resources: {{- toYaml .resources | nindent 12 }}
          ports:
            - name: metrics
              containerPort: 8002
          volumeMounts:
            - name: rabbitmq-connection-string
              mountPath: /var/run/secrets/rabbitmqConnectionString
              subPath: rabbitmqConnectionString
            - name: mongodb-connection-string
              mountPath: /var/run/secrets/mongodbConnectionString
              subPath: mongodbConnectionString
            - name: local
              mountPath: /data/local
            - name: redis-password
              mountPath: /var/run/secrets/redis-password.conf
              subPath: redis-password.conf
            - name: model-config
              mountPath: /models/usev4/config.pbtxt
              subPath: usev4-config
          startupProbe:
            httpGet:
              path: /health/startup
              port: 8001
            failureThreshold: 3
            initialDelaySeconds: 10
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8001
            failureThreshold: {{ .livenessProbe.failureThreshold | default 1 }}
            initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds | default 120 }}
            periodSeconds: {{ .livenessProbe.periodSeconds | default 60 }}
            timeoutSeconds: {{ .livenessProbe.timeoutSeconds | default 60 }}
          envFrom:
            - configMapRef:
                name: cognigy-env
          env:
            - name: LANGUAGES_TO_RUN
              value: en-US,en-AU,en-CA,en-IN,en-GB
            - name: TRAIN
              value: 'true'
            - name: DEFAULT_EMBEDDING_MODEL
              value: usev4
            - name: MODEL_CONFIG_FILE
              value: /models/usev4/config.pbtxt
            - name: EMBEDDING_SERVER_ADDRESS
              value: service-nlp-embedding-en:8000
            - name: COGNIGY_AI_RELEASE_VERSION
              value: {{ $.Chart.AppVersion | quote }} 
            {{- if .extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        - name: rabbitmq-connection-string
          secret:
            secretName: {{ $statefulRabbitMq_secret }}
            items:
              - key: connection-string
                path: rabbitmqConnectionString
        - name: mongodb-connection-string
          secret:
            secretName: {{ $serviceNlp_dbSecret }}
            items:
              - key: connection-string
                path: mongodbConnectionString
        - name: local
          emptyDir: {}
        - name: redis-password
          secret:
            secretName: {{ $redisHa_secret }}
        - name: model-config
          configMap:
            name: embedding-model-config
      {{- include "image.pullSecretsCognigy" $ | nindent 6 }}
      securityContext:
        {{- toYaml .securityContext | nindent 8 }}
{{- end }}
{{- end }}