{{- $statefulRabbitMq_secret := include "common.secretName.render" ( dict "existingSecret" $.Values.statefulRabbitMq.auth.existingSecret "defaultSecret" "cognigy-rabbitmq") }}
{{- $redisHa_secret := include "common.secretName.render" ( dict "existingSecret" $.Values.redisHa.auth.existingSecret "defaultSecret" "cognigy-redis-password") }}
{{- $serviceAi_dbSecret := include "common.secretName.render" ( dict "existingSecret" $.Values.dbConnectionString.services.serviceAi.auth.existingSecret "defaultSecret" (printf "cognigy-%s" $.Values.dbConnectionString.services.serviceAi.serviceName)) }}
{{- with .Values.serviceSessionStateManager }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-session-state-manager
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app: service-session-state-manager
  {{- if not (and ($.Values.hpa.enabled) ($.Values.hpa.removeReplicas)) }}
  replicas: {{ .replicaCount }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
        checksum/rabbitmq: {{ if not (lookup "v1" "Secret" $.Release.Namespace $statefulRabbitMq_secret) }}{{ $statefulRabbitMq_secret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $statefulRabbitMq_secret).data | sha256sum }}{{ end }}
        checksum/redis: {{ if not (lookup "v1" "Secret" $.Release.Namespace $redisHa_secret) }}{{ $redisHa_secret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $redisHa_secret).data | sha256sum }}{{ end }}
        # we use the 'service-ai' secret on purpose - this is NOT a mistake
        checksum/secret: {{ if not (lookup "v1" "Secret" $.Release.Namespace $serviceAi_dbSecret) }}{{ $serviceAi_dbSecret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $serviceAi_dbSecret).data | sha256sum }}{{ end }}
      labels:
        app: service-session-state-manager
    spec:
      {{- if .affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if or (.nodeSelector) (and ($.Values.hpa.enabled) ($.Values.hpa.useHpaNodeSelector))}}
      nodeSelector:
        {{- if .nodeSelector }}
          {{- include "common.tplvalues.render" (dict "value" .nodeSelector "context" $) | nindent 8 }}
        {{- end }}
        {{- if and ($.Values.hpa.enabled) ($.Values.hpa.useHpaNodeSelector) }}
          {{- include "common.tplvalues.render" (dict "value" $.Values.hpa.hpaNodeSelector "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if or (.tolerations) (and ($.Values.hpa.enabled) ($.Values.hpa.useHpaTolerations))}}
      tolerations: 
        {{- if or (.tolerations) }}
          {{- include "common.tplvalues.render" (dict "value" .tolerations "context" $) | nindent 8 }}
        {{- end }}
        {{- if and ($.Values.hpa.enabled) ($.Values.hpa.useHpaTolerations) }}
          {{- include "common.tplvalues.render" (dict "value" $.Values.hpa.hpaTolerations "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .priorityClassName }}
      priorityClassName: {{ .priorityClassName }}
      {{- end }}
      containers:
        - name: service-session-state-manager
          image: {{ include "common.image.render" (dict "global" $.Values.global "image" .image) }}
          resources: {{- toYaml .resources | nindent 12 }}
          env:
            - name: REDIS_ENABLE_RECONNECT
              value: "true"
            - name: RABBITMQ_ENABLE_RECONNECT
              value: "true"		 
            - name: TRACING_ENABLED
              value: {{ $.Values.tracing.sentry.runtime.enabled | quote }}
            - name: TRACING_BASE_URL_WITH_PROTOCOL
              value: {{ $.Values.tracing.sentry.runtime.baseUrl | quote }}      
            - name: TRACING_ERRORS_ENABLED
              value: {{ $.Values.tracing.sentry.runtime.errorsEnabled | quote }}
            - name: TRACING_EVENTS_SAMPLE_RATE
              value: {{ $.Values.tracing.sentry.runtime.eventsSampleRate | quote }}
            - name: TRACING_SAMPLE_RATE
              value: {{ $.Values.tracing.sentry.runtime.sampleRate | quote }}
            - name: ENVIRONMENT
              value: {{ $.Values.tracing.environment | quote }} 
            - name: COGNIGY_AI_RELEASE_VERSION
              value: {{ $.Chart.AppVersion | quote }}
            {{- if .extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: 8002
          envFrom:
            - configMapRef:
                name: cognigy-env
          volumeMounts:
            - name: rabbitmq-connection-string
              mountPath: /var/run/secrets/rabbitmqConnectionString
              subPath: rabbitmqConnectionString
            - name: mongodb-connection-string
              mountPath: /var/run/secrets/mongodbConnectionString
              subPath: mongodbConnectionString
            - name: redis-password
              mountPath: /var/run/secrets/redis-password.conf
              subPath: redis-password.conf
          startupProbe:
            httpGet:
              path: /health/startup
              port: 8001
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8001
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 10
      volumes:
        - name: rabbitmq-connection-string
          secret:
            secretName: {{ $statefulRabbitMq_secret }}
            items:
              - key: connection-string
                path: rabbitmqConnectionString
        - name: mongodb-connection-string
          secret:
            secretName: {{ $serviceAi_dbSecret }}
            items:
              - key: connection-string
                path: mongodbConnectionString
        - name: redis-password
          secret:
            secretName: {{ $redisHa_secret }}
      {{- include "image.pullSecretsCognigy" $ | nindent 6 }}
      securityContext:
        {{- toYaml .securityContext | nindent 8 }}
{{- end }}