{{- if and (eq .Values.cloud.provider "aws") (.Values.functions.persistence.aws.efs.enabled) }}
{{- if (not (.Values.functions.persistence.aws.efs.efs_csi.enabled)) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: efs-provisioner-functions
  name: efs-provisioner-functions
  namespace: {{ $.Release.Namespace | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: efs-provisioner-functions
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: efs-provisioner-functions
    spec:
      containers:
      - env:
        - name: FILE_SYSTEM_ID
          value: {{- include "functions.efs.id" $ | indent 1 }}
        - name: AWS_REGION
          value: {{ .Values.cloud.region }}
        - name: PROVISIONER_NAME
          value: efs-provisioner-functions
        image: quay.io/external_storage/efs-provisioner:latest
        name: efs-provisioner-functions
        volumeMounts:
        - mountPath: /persistentvolumes
          name: pv-volume
      volumes:
      - name: pv-volume
        nfs:
          path: /
          server: {{- include "functions.efs.id" $ | indent 1 }}.efs.{{ .Values.cloud.region }}.amazonaws.com
{{ end }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: functions
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    {{- include "functions.legacy.storage.class" $ | nindent 4 }}
spec:
  {{- include "functions.storage.class" $ | nindent 2 }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      # The storage request has no effect for NFS
      storage: {{ .Values.functions.persistence.size | default "1Mi" }}

{{- if (not (.Values.functions.persistence.storageClass)) }}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: aws-efs-functions
{{- if (.Values.functions.persistence.aws.efs.efs_csi.enabled) }}
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: {{- include "functions.efs.id" $ | indent 1 }}
  directoryPerms: {{ .Values.functions.persistence.aws.efs.efs_csi.directoryPerms | default "777" | quote }}
  uid: {{ .Values.functions.persistence.aws.efs.efs_csi.uid | default "1000" | quote }}
  gid: {{ .Values.functions.persistence.aws.efs.efs_csi.gid | default "1000" | quote  }}
{{- else }}
provisioner: efs-provisioner-functions
{{ end }}
{{ end }}

{{- if (not (.Values.functions.persistence.aws.efs.efs_csi.enabled)) }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: efs-provisioner-functions
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: default
    # Reference to upper's `metadata.namespace`
    namespace: {{ $.Release.Namespace | quote }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
{{ end }}
{{ end }}