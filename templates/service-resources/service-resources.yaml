{{- $statefulRabbitMq_secret := include "common.secretName.render" ( dict "existingSecret" $.Values.statefulRabbitMq.auth.existingSecret "defaultSecret" "cognigy-rabbitmq") }}
{{- $redisHa_secret := include "common.secretName.render" ( dict "existingSecret" $.Values.redisHa.auth.existingSecret "defaultSecret" "cognigy-redis-password") }}
{{- $redisPersistentHa_secret := include "common.secretName.render" ( dict "existingSecret" $.Values.redisPersistentHa.auth.existingSecret "defaultSecret" "cognigy-redis-persistent-password") }}
{{- $serviceResources_dbSecret := include "common.secretName.render" ( dict "existingSecret" $.Values.dbConnectionString.services.serviceResources.auth.existingSecret "defaultSecret" (printf "cognigy-%s" $.Values.dbConnectionString.services.serviceResources.serviceName)) }}
{{- $cognigySearchOrchestratorApiKey := include "common.secretName.render" ( dict "existingSecret" $.Values.commonSecrets.cognigySearchOrchestratorApiKey.existingSecret "defaultSecret" "cognigy-search-orchestrator-api-key") }}
{{- with .Values.serviceResources }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-resources
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app: service-resources
  {{- if not (and ($.Values.hpa.enabled) ($.Values.hpa.removeReplicas) ($.Values.hpa.services.serviceResources.enabled)) }}
  replicas: {{ .replicaCount }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/cognigy-env: {{ include (print $.Template.BasePath "/configurations/cognigy-env.yaml") $ | sha256sum }}
        checksum/rabbitmq: {{ if not (lookup "v1" "Secret" $.Release.Namespace $statefulRabbitMq_secret) }}{{ $statefulRabbitMq_secret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $statefulRabbitMq_secret).data | sha256sum }}{{ end }}
        checksum/redis: {{ if not (lookup "v1" "Secret" $.Release.Namespace $redisHa_secret) }}{{ $redisHa_secret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $redisHa_secret).data | sha256sum }}{{ end }}
        checksum/redis-persistent: {{ if not (lookup "v1" "Secret" $.Release.Namespace $redisPersistentHa_secret) }}{{ $redisPersistentHa_secret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $redisPersistentHa_secret).data | sha256sum }}{{ end }}
        checksum/secret: {{ if not (lookup "v1" "Secret" $.Release.Namespace $serviceResources_dbSecret) }}{{ $serviceResources_dbSecret | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $serviceResources_dbSecret).data | sha256sum }}{{ end }}
        {{- if $.Values.knowledgeSearch.enabled }}
        checksum/cognigy-search-orchestrator-api-key: {{ if not (lookup "v1" "Secret" $.Release.Namespace $cognigySearchOrchestratorApiKey) }}{{ $cognigySearchOrchestratorApiKey | sha256sum }}{{ else }}{{ toYaml (lookup "v1" "Secret" $.Release.Namespace $cognigySearchOrchestratorApiKey).data | sha256sum }}{{ end }}
        {{- end }}
        {{- if $.Values.cognigyCommonPodAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" $.Values.cognigyCommonPodAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels:
        app: service-resources
    spec:
      {{- if .affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if or (.nodeSelector) (and ($.Values.hpa.enabled) ($.Values.hpa.useHpaNodeSelector))}}
      nodeSelector:
        {{- if .nodeSelector }}
          {{- include "common.tplvalues.render" (dict "value" .nodeSelector "context" $) | nindent 8 }}
        {{- end }}
        {{- if and ($.Values.hpa.enabled) ($.Values.hpa.useHpaNodeSelector) }}
          {{- include "common.tplvalues.render" (dict "value" $.Values.hpa.hpaNodeSelector "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if or (.tolerations) (and ($.Values.hpa.enabled) ($.Values.hpa.useHpaTolerations))}}
      tolerations: 
        {{- if or (.tolerations) }}
          {{- include "common.tplvalues.render" (dict "value" .tolerations "context" $) | nindent 8 }}
        {{- end }}
        {{- if and ($.Values.hpa.enabled) ($.Values.hpa.useHpaTolerations) }}
          {{- include "common.tplvalues.render" (dict "value" $.Values.hpa.hpaTolerations "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .priorityClassName }}
      priorityClassName: {{ .priorityClassName }}
      {{- end }}
      containers:
        - name: service-resources
          image: {{ include "common.image.render" (dict "global" $.Values.global "image" .image) }}
          resources: {{- toYaml .resources | nindent 12 }}
          env:
            - name: REDIS_ENABLE_RECONNECT
              value: "true"
            - name: RABBITMQ_ENABLE_RECONNECT
              value: "true"
            - name: TRACING_ENABLED
              value: {{ $.Values.tracing.sentry.ide.enabled | quote }}
            - name: TRACING_BASE_URL_WITH_PROTOCOL
              value: {{ $.Values.tracing.sentry.ide.baseUrl | quote }}      
            - name: TRACING_ERRORS_ENABLED
              value: {{ $.Values.tracing.sentry.ide.errorsEnabled | quote }}
            - name: TRACING_EVENTS_SAMPLE_RATE
              value: {{ $.Values.tracing.sentry.ide.eventsSampleRate | quote }}
            - name: TRACING_SAMPLE_RATE
              value: {{ $.Values.tracing.sentry.ide.sampleRate | quote }}
            - name: ENVIRONMENT
              value: {{ $.Values.tracing.environment | quote }}
            - name: COGNIGY_AI_RELEASE_VERSION
              value: {{ $.Chart.AppVersion | quote }}
            - name: FEATURE_USE_NEW_NFS
              value: {{ $.Values.migrateFS.enabled | quote }}
            - name: FEATURE_DEPRECATE_OLD_NFS
              value: {{ $.Values.migrateFS.finished | quote }}
            {{- if and ($.Values.cubejs.enabled) ($.Values.serviceInsightsResources.enabled) }}
            - name: FEATURE_USE_GOALS
              value: {{ $.Values.cognigyEnv.FEATURE_USE_GOALS | quote }}
            {{- else }}
            - name: FEATURE_USE_GOALS
              value: "false"
            {{- end }}
            {{- if .extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- if $.Values.knowledgeSearch.enabled }}
            - name: SEARCH_ORCHESTRATOR_API_KEY
              valueFrom:
                secretKeyRef:
                    name: {{ $cognigySearchOrchestratorApiKey }}
                    key: api-key
            {{- end }}
            - name: FEATURE_ENABLE_TRANSCRIPT_MANAGER
              value: {{ and ($.Values.featureTranscripts.enabled) ($.Values.migrateFS.enabled) | quote }}
          ports:
            - name: metrics
              containerPort: 8002
          envFrom:
            - configMapRef:
                name: cognigy-env
          volumeMounts:
            - name: rabbitmq-connection-string
              mountPath: /var/run/secrets/rabbitmqConnectionString
              subPath: rabbitmqConnectionString
            - name: mongodb-connection-string
              mountPath: /var/run/secrets/mongodbConnectionString
              subPath: mongodbConnectionString
            - name: nlu-db-connection-string
              mountPath: /var/run/secrets/nluDBConnectionString
              subPath: nluDBConnectionString
            - name: redis-password
              mountPath: /var/run/secrets/redis-password.conf
              subPath: redis-password.conf
            - name: redis-persistent-password
              mountPath: /var/run/secrets/redis-persistent-password.conf
              subPath: redis-persistent-password.conf
            {{- if not $.Values.migrateFS.finished }}
            - name: flow-modules
              mountPath: /app/flowModules
            - name: functions
              mountPath: /app/oldFunctions
            {{- end }}
            {{- if $.Values.migrateFS.enabled }}
            - name: runtime
              mountPath: /app/extensions
              subPath: extensions
            - name: runtime
              mountPath: /app/functions
              subPath: functions
            - name: ide
              mountPath: /app/packages
              subPath: packages
            - name: ide
              mountPath: /app/snapshots
              subPath: snapshots
            {{- end }}
            {{- if .extraVolumeMounts }}
            {{- include "common.tplvalues.render" ( dict "value" .extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
          startupProbe:
            httpGet:
              path: /health/startup
              port: 8001
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8001
            failureThreshold: 3
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 10
      volumes:
        - name: rabbitmq-connection-string
          secret:
            secretName: {{ $statefulRabbitMq_secret }}
            items:
              - key: connection-string
                path: rabbitmqConnectionString
        - name: mongodb-connection-string
          secret:
            secretName: {{ $serviceResources_dbSecret }}
            items:
              - key: connection-string
                path: mongodbConnectionString
        - name: nlu-db-connection-string
          secret:
            secretName: cognigy-service-nlp
            items:
              - key: connection-string
                path: nluDBConnectionString
        - name: redis-password
          secret:
            secretName: {{ $redisHa_secret }}
        - name: redis-persistent-password
          secret:
            secretName: {{ $redisPersistentHa_secret }}
        {{- if not $.Values.migrateFS.finished }}
        - name: flow-modules
          persistentVolumeClaim:
            claimName: flow-modules
        - name: functions
          persistentVolumeClaim:
            claimName: functions
        {{- end }}
        {{- if $.Values.migrateFS.enabled }}
        - name: runtime
          persistentVolumeClaim:
            claimName: runtime
        - name: ide
          persistentVolumeClaim:
            claimName: ide
        {{- end }}
        {{- if .extraVolumes }}
        {{- include "common.tplvalues.render" ( dict "value" .extraVolumes "context" $ ) | nindent 8 }}
        {{- end }}
      {{- include "image.pullSecretsCognigy" $ | nindent 6 }}
      securityContext:
        {{- toYaml .securityContext | nindent 8 }}
{{- end }}